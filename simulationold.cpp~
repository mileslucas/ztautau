/*
 * Miles Lucas
 * Phys 322L Spring 2017
 * mdlucas@iastate.edu
 */

#include <string>

using namespace std;

void simulation(){

  /* Create the directory to store the histograms in if it doesn't already exist */
  system("mkdir hists");
  
  /* Import files */
  TFile *ztt_f = new TFile("emu_zttllcxxx_is722.root");
  TFile *gamma_f = new TFile("emu_dyemxmg25_py560.root");
  TFile *ww_f = new TFile("emu_wwllcxxxx_py057.root");
  TFile *tt_f = new TFile("emu_ttll170xs_hw05.root");

  /* Get Trees */
  TTree *ztt = (TTree *) ztt_f->Get("h10");
  TTree *gamma = (TTree *) gamma_f->Get("h10");
  TTree *ww = (TTree *) ww_f->Get("h10");
  TTree *tt = (TTree *) tt_f->Get("h10");

  /* Set up canvas */
  TCanvas *c1 = new TCanvas("c", "Simulation Hists", 1000, 1000);
  gStyle->SetOptStat(111111);
  c1->Divide(2,2); // two columns, two rows
  // Set up the labels for the histograms
  TPaveText *ztt_l = new TPaveText();
  ztt_l->AddText("Z->TT");
  TPaveText *gamma_l = new TPaveText();
  gamma_l->AddText("Gamma");
  TPaveText *ww_l = new TPaveText();
  ww_l->AddText("WW");
  TPaveText *tt_l = new TPaveText();
  tt_l->AddText("tt");
  
  /* Define Cuts */
  TCut cut1 = "ete1<50";
  TCut cut2 = "ptm1<50";
  
  /* Draw histograms */
  // This list will be the variables printed in each iteration. I.e. these are the variables you care about
  const char* varnames[] = {"ptm1", "ete1", "met4", "met5", "nnej", "etj1", "etj2"};
  int numvars = sizeof(varnames)/sizeof(varnames[0]);

  for(int i = 0; i < numvars; i++) { 
    const char* var = varnames[i];
    const char* filename = ("hists/" + string(var) + ".eps").c_str();

    // Each iteration will navigate to each pad, draw the histogram, and add a label for the dataset
    c1->cd(1);
    ztt->Draw(var, cut2);
    ztt_l->Draw();
  
    c1->cd(2);
    gamma->Draw(var, cut2);
    gamma_l->Draw();

    c1->cd(3);
    ww->Draw(var, cut2);
    ww_l->Draw();

    c1->cd(4);
    tt->Draw(var, cut2);
    tt_l->Draw();

    // This will print each set into a directory called hists
    c1->Print(filename);
  }
  // This will close the window after all the iterations have been made
  c1->Close();
  

}
